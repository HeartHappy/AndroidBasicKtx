plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'signing'
}
group("com.hearthappy")
version(libraryVersion)

tasks.register('javadoc', Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

tasks.register('javadocJar', Jar) {
    dependsOn javadoc
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

tasks.register('sourceJar', Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set("sources")
}
// 定义一个任务，用于将本地目录压缩成 ZIP 文件
tasks.register('zipRepo', Zip) {
    from "$buildDir/repo"
    archiveFileName = 'io.zip'
    destinationDirectory = file(buildDir)
}
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'io.github.hearthappy'
                artifactId = 'android-basic-ktx'
                version = libraryVersion

                //afterEvaluate：闭包后在按照类型打包发布

                from components.release
//                artifact("$buildDir/repo/io/github/hearthappy/android-basic-ktx/1.0.0/android-basic-ktx-1.0.0.aar")
                artifacts {
                    archives(tasks.named('javadocJar'))
                    archives(tasks.named('sourceJar'))
                }
                pom {
                    name = 'android-basic-ktx'
                    description = 'Android basic framework packaging and extension library'
                    url = 'https://github.com/HeartHappy/AndroidBasicKtx'

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id = 'HeartHappy'
                            name = 'এ᭄白ຼ龙້໌ᮨꦿ'
                            email = '1096885636@qq.com'
                        }
                    }

                    scm {
                        connection = 'scm:git://github.com/HeartHappy/AndroidBasicKtx'
                        developerConnection = 'scm:git:ssh://github.com/HeartHappy/AndroidBasicKtx'
                        url = 'https://github.com/HeartHappy/AndroidBasicKtx'
                    }
                }
            }

        }
        repositories {
            maven {
                //打包推送到本地仓库地址
                url = uri("$buildDir/repo")
                //推送远程仓库需要认证
//                url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
//                credentials {
//                    username = project.properties['sonatypeUsername']
//                    password = project.properties['sonatypePassword']
//                }
            }
        }

    }
    signing {
        //gpg签名认证
        sign(publishing.publications.release)
    }
    // 设置 zipRepo 任务依赖于发布任务
    tasks.named('zipRepo') { dependsOn(publishReleasePublicationToMavenRepository) }

    // 确保发布任务完成后总是执行 zipRepo 任务，即使发布任务失败
    tasks.named('publishReleasePublicationToMavenRepository') {
        finalizedBy(tasks.named('zipRepo'))
    }
}


android {
    namespace 'com.hearthappy.androidbasicktx'
    compileSdk 31

    defaultConfig {
        minSdk 21
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    libraryVariants.all { variant ->
        variant.outputs.all {
            // 定义新的文件名，这里以库名、版本名和构建类型为例
            def newName = "android-basic-ktx-${variant.buildType.name}-${libraryVersion}.aar"
            outputFileName = newName
        }
    }
}

dependencies {

    implementation libs.androidx.core.ktx
//    implementation platform(libs.kotlin.bom)
    implementation libs.androidx.appcompat
    implementation libs.material
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}